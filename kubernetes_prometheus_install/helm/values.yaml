# Configurazione di base per RBAC e sicurezza
rbac:
  create: true

podSecurityPolicy:
  enabled: false

# Configurazione principale del server Prometheus
server:
  enabled: true
  replicaCount: ${server_replicas}

  # Configurazione globale dello scraping
  global:
    scrape_interval: 30s
    scrape_timeout: 20s
    evaluation_interval: 30s

  # Configurazione della persistenza
  persistentVolume:
    enabled: true
    size: ${server_storage_size}
    storageClass: ${storage_class_name}
    accessModes:
      - ReadWriteOnce
    annotations: {}

  # Configurazione della retention
  retention: "15d"
  retentionSize: "80GB"

  # Configurazione del deployment
  nodeSelector: ${node_selector}
  tolerations: ${tolerations}
  affinity: ${affinity}

  # Configurazione della sicurezza
  securityContext:
    runAsUser: 65534
    runAsNonRoot: true
    runAsGroup: 65534
    fsGroup: 65534

  # Configurazione delle risorse
  resources:
    requests:
      cpu: 300m
      memory: 300Mi
    limits:
      cpu: 2000m
      memory: 4Gi

  # Configurazione degli alert
  alertmanagers: []

  # Service configuration
  service:
    type: ClusterIP
    servicePort: 80
    annotations: {}

# Configurazione di AlertManager come subchart
alertmanager:
  enabled: true
  replicaCount: ${alertmanager_replicas}

  persistence:
    enabled: true
    size: ${alertmanager_storage_size}
    storageClass: ${storage_class_name}

  nodeSelector: ${node_selector}
  tolerations: ${tolerations}
  affinity: ${affinity}

  securityContext:
    runAsUser: 65534
    runAsNonRoot: true
    runAsGroup: 65534
    fsGroup: 65534

  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 256Mi

# Configurazione di kube-state-metrics come subchart
kube-state-metrics:
  enabled: true
  replicaCount: ${kube_state_metrics_replicas}

  nodeSelector: ${node_selector}
  tolerations: ${tolerations}
  affinity: ${affinity}

  securityContext:
    runAsUser: 65534
    runAsNonRoot: true

  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 500m
      memory: 256Mi

  prometheus:
    monitor:
      enabled: true
      interval: "30s"

# Configurazione di node-exporter come subchart
prometheus-node-exporter:
  enabled: true

  tolerations: ${node_exporter_tolerations}

  securityContext:
    runAsUser: 65534
    runAsNonRoot: true
    fsGroup: 65534

  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 200m
      memory: 128Mi

  prometheus:
    monitor:
      enabled: true
      interval: "30s"

# Configurazione di pushgateway come subchart
prometheus-pushgateway:
  enabled: true
  replicaCount: ${pushgateway_replicas}

  nodeSelector: ${node_selector}
  tolerations: ${tolerations}
  affinity: ${affinity}

  persistentVolume:
    enabled: true
    size: "2Gi"
    storageClass: ${storage_class_name}

  securityContext:
    runAsUser: 65534
    runAsNonRoot: true
    fsGroup: 65534

  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 200m
      memory: 128Mi

  serviceAnnotations:
    prometheus.io/probe: pushgateway
